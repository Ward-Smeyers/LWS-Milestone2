---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: milestone2-web
  namespace: default
spec:
  selector:
    matchLabels:
      app: web
  replicas: 1
  template:
    metadata:
      labels:
        app: web
    spec: # this is our pod spec!
      containers:
        - name: web
          image: sebp/lighttpd
          ports:
            - containerPort: 80
              name: http # from now on we can use the name http to refer to this port
          livenessProbe: # checks if the server still works every 5 seconds
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          readinessProbe: # checks if the server is ready to accept traffic
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 2
          resources:
            limits:
              memory: "512Mi"
              cpu: "500m"
            requests:
              memory: "64Mi"
              cpu: "250m"
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: milestone2-api
#   namespace: default
# spec:
#   selector:
#     matchLabels:
#       app: api
#   replicas: 1
#   template:
#     metadata:
#       labels:
#         app: api
#     spec: # this is our pod spec!
#       containers:
#         - name: api
#           build: /app/api
#           ports:
#             - containerPort: 80
#               name: apiport # from now on we can use the name http to refer to this port
#           livenessProbe: # checks if the server still works every 5 seconds
#             httpGet:
#               path: /
#               port: apiport
#             initialDelaySeconds: 5
#             periodSeconds: 5
#           readinessProbe: # checks if the server is ready to accept traffic
#             httpGet:
#               path: /
#               port: apiport
#             initialDelaySeconds: 2
#           resources:
#             limits:
#               memory: "512Mi"
#               cpu: "500m"
#             requests:
#               memory: "64Mi"
#               cpu: "100m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: milestone2-db
  namespace: default
spec:
  selector:
    matchLabels:
      app: db
  replicas: 1
  template:
    metadata:
      labels:
        app: db
    spec: # this is our pod spec!
      containers:
        - name: db
          image: mongodb/mongodb-community-server
          env:
          - name: MONGODB_INITDB_ROOT_USERNAME
            value: "root"
          - name: MONGODB_INITDB_ROOT_PASSWORD
            value: "kqjhgksdgyaqjbsdkflghqklhsdnjqHBSKD"
          volumesmounts:
            - name: db-persistent-storage
              mountPath: /data/db
          ports:
            - containerPort: 27017
              name: dbport # from now on we can use the name http to refer to this port
          livenessProbe: # checks if the server still works every 5 seconds
            httpGet:
              path: /
              port: dbport
            initialDelaySeconds: 5
            periodSeconds: 5
          readinessProbe: # checks if the server is ready to accept traffic
            httpGet:
              path: /
              port: dbport
            initialDelaySeconds: 2
          resources:
            limits:
              memory: "512Mi"
              cpu: "500m"
            requests:
              memory: "64Mi"
              cpu: "100m"
      volumes:
        - name: db-persistent-storage
          persistentVolumeClaim:
            claimName: db-persistent-storage
