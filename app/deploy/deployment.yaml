---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: milestone2-web
  namespace: default
spec:
  selector:
    matchLabels:
      app: web
  replicas: 2
  template:
    metadata:
      labels:
        app: web
    spec: # this is our pod spec!
      imagePullSecrets:
      - name: ghcr-login-secret
      containers:
        - name: web
          image: ghcr.io/ward-smeyers/lws-milestone2-web:main
          imagePullPolicy: Always
          ports:
            - containerPort: 80
              name: webport # from now on we can use the name http to refer to this port
          tty: true
          livenessProbe: # checks if the server still works every 5 seconds
            httpGet:
              path: /
              port: webport
            initialDelaySeconds: 5
            periodSeconds: 5
          readinessProbe: # checks if the server is ready to accept traffic
            httpGet:
              path: /
              port: webport
            initialDelaySeconds: 2
          resources:
            limits:
              memory: "512Mi"
              cpu: "500m"
            requests:
              memory: "64Mi"
              cpu: "250m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: milestone2-api
  namespace: default
spec:
  selector:
    matchLabels:
      app: api
  replicas: 3
  template:
    metadata:
      labels:
        app: api
    spec: # this is our pod spec!
      imagePullSecrets:
      - name: ghcr-login-secret
      containers:
        - name: api
          image: ghcr.io/ward-smeyers/lws-milestone2-api:main
          imagePullPolicy: Always
          env:
          - name: MONGODB_USERNAME
            valueFrom:
              secretKeyRef:
                name: mongodb-creds-secret
                key: mongodb-username

          - name: MONGODB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mongodb-creds-secret
                key: mongodb-password

          - name: MONGODB_HOST
            value: "db-service"

          - name: FRONTEND_URL
            value: "https://milestone2.smeyers.xyz"

          - name: MAX_RETRIES
            value: "5"

          ports:
            - containerPort: 80
              name: apiport # from now on we can use the name http to refer to this port
          livenessProbe: # checks if the server still works every 5 seconds
            httpGet:
              path: /
              port: apiport
            initialDelaySeconds: 5
            periodSeconds: 5
          readinessProbe: # checks if the server is ready to accept traffic
            httpGet:
              path: /
              port: apiport
            initialDelaySeconds: 2
          resources:
            limits:
              memory: "512Mi"
              cpu: "500m"
            requests:
              memory: "64Mi"
              cpu: "100m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: milestone2-db
  namespace: default
spec:
  selector:
    matchLabels:
      app: db
  replicas: 1
  template:
    metadata:
      labels:
        app: db
    spec: # this is our pod spec!
      containers:
        - name: db
          image: mongodb/mongodb-community-server
          env:
          - name: MONGODB_INITDB_ROOT_USERNAME
            valueFrom:
              secretKeyRef:
                name: mongodb-creds-secret
                key: mongodb-username
          - name: MONGODB_INITDB_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mongodb-creds-secret
                key: mongodb-password
          ports:
            - containerPort: 27017
              name: dbport # from now on we can use the name http to refer to this port
          livenessProbe: # checks if the server still works every 5 seconds
            httpGet:
              path: /
              port: dbport
            initialDelaySeconds: 5
            periodSeconds: 5
          readinessProbe: # checks if the server is ready to accept traffic
            httpGet:
              path: /
              port: dbport
            initialDelaySeconds: 2
          resources:
            limits:
              memory: "512Mi"
              cpu: "500m"
            requests:
              memory: "64Mi"
              cpu: "100m"
